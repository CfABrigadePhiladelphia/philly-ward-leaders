{
  "name": "leaflet.locatecontrol",
  "version": "0.40.0",
  "homepage": "https://github.com/domoritz/leaflet-locatecontrol",
  "description": "A useful control to geolocate the user with many options. Used by osm.org and mapbox among many others.",
  "main": "src/L.Control.Locate.js",
  "author": {
    "name": "Dominik Moritz",
    "email": "domoritz@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:domoritz/leaflet-locatecontrol.git"
  },
  "keywords": [
    "leaflet",
    "locate",
    "plugin"
  ],
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "font-awesome": "^4.2.0",
    "leaflet": "^0.7.3"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-bump": "0.0.16",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-nodeunit": "^0.4.1",
    "grunt-contrib-sass": "^0.8.1",
    "grunt-contrib-uglify": "^0.6.0",
    "grunt-serve": "^0.1.6"
  },
  "readme": "# Leaflet.Locate\n\nA useful control to geolocate the user with many options.\n\nTested with [Leaflet](http://leafletjs.com/) 0.7 in Firefox, Webkit and mobile Webkit. Tested with [Font Awesome](https://fortawesome.github.io/Font-Awesome/) 4.2.0.\n\n**v0.34.0 introduced breaking changes to the API. Please check your code!**\n\n## Demo\n\nCheck out the demo at http://domoritz.github.io/leaflet-locatecontrol/demo/\n\n\n## Usage\n\n### Set up:\n\ntl;dr\n\n1. Get CSS and JavaScript files\n2. Include CSS and JavaScript files\n3. Initialize plugin\n\n\n#### Download JavaScript and CSS files\n\nFor testing purposes and development, you can use the latest version directly from my repository using [rawgithub](http://rawgithub.com/). However, **don't do this in production environments**!\n\nFor production environments, use the [mapbox CDN](https://www.mapbox.com/mapbox.js/plugins/#leaflet-locatecontrol) or [download the files from this repository](/domoritz/leaflet-locatecontrol/archive/gh-pages.zip). In `\\src` are the original JS and CSS files and in `\\dist` you can find the minified versions suitable for production.\n\nThe latest version is always available through [Bower](http://bower.io/), just run `bower install leaflet.locatecontrol`. With bower, everything can easily be kept up to date.\n\nYou can also get the latest version of the plugin with [npm](https://www.npmjs.org/). This plugin is available in the [npm repository](https://www.npmjs.org/package/leaflet.locatecontrol). Just run `npm install leaflet.locatecontrol`.\n\n\n#### Add the JavaScript and CSS files\n\nThe control uses [Font Awesome](https://fortawesome.github.io/Font-Awesome/) for the icons and if you don't have it included yet, you can use the CSS from the CDN.\n\nThen include the CSS and JavaScript files.\n\nThis example shows how to include font awesome from a CDN and the locate control files through rawgit. **Only use rawgit for testing and never in production! Always prefer using the Mapbox CDN or bower.**\n\n```html\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n<link rel=\"stylesheet\" href=\"//rawgithub.com/domoritz/leaflet-locatecontrol/gh-pages/dist/L.Control.Locate.min.css\" />\n<!--[if lt IE 9]>\n    <link rel=\"stylesheet\" href=\"//rawgithub.com/domoritz/leaflet-locatecontrol/gh-pages/dist/L.Control.Locate.ie.min.css\"/>\n<![endif]-->\n\n<script src=\"//rawgithub.com/domoritz/leaflet-locatecontrol/gh-pages/dist/L.Control.Locate.min.js\" ></script>\n```\n\n#### Add the following snippet to your map initialization:\n\nThis snippet adds the control to the map. You can pass also pass a configuration.\n\n```js\nL.control.locate().addTo(map);\n```\n\n### Possible options\n\nThe locate controls inherits options from [Leaflet Controls](http://leafletjs.com/reference.html#control-options).\n\n```js\nL.control.locate({\n\tposition: 'topleft',  // set the location of the control\n    drawCircle: true,  // controls whether a circle is drawn that shows the uncertainty about the location\n    follow: false,  // follow the user's location\n    setView: true, // automatically sets the map view to the user's location, enabled if `follow` is true\n    keepCurrentZoomLevel: false, // keep the current map zoom level when displaying the user's location. (if `false`, use maxZoom)\n    stopFollowingOnDrag: false, // stop following when the map is dragged if `follow` is true (deprecated, see below)\n    remainActive: false, // if true locate control remains active on click even if the user's location is in view.\n    markerClass: L.circleMarker, // L.circleMarker or L.marker\n    circleStyle: {},  // change the style of the circle around the user's location\n    markerStyle: {},\n    followCircleStyle: {},  // set difference for the style of the circle around the user's location while following\n    followMarkerStyle: {},\n    icon: 'fa fa-map-marker',  // class for icon, fa-location-arrow or fa-map-marker\n    iconLoading: 'fa fa-spinner fa-spin',  // class for loading icon\n    circlePadding: [0, 0], // padding around accuracy circle, value is passed to setBounds\n    metric: true,  // use metric or imperial units\n    onLocationError: function(err) {alert(err.message)},  // define an error callback function\n    onLocationOutsideMapBounds:  function(context) { // called when outside map boundaries\n            alert(context.options.strings.outsideMapBoundsMsg);\n    },\n    showPopup: true, // display a popup when the user click on the inner marker\n    strings: {\n        title: \"Show me where I am\",  // title of the locate control\n        popup: \"You are within {distance} {unit} from this point\",  // text to appear if user clicks on circle\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\" // default message for onLocationOutsideMapBounds\n    },\n    locateOptions: {}  // define location options e.g enableHighAccuracy: true or maxZoom: 10\n}).addTo(map);\n```\n\n### Methods\n\nYou can call `start()` or `stop()` on the locate control object to set the location of page load for example.\n\n```js\n// create control and add to map\nvar lc = L.control.locate().addTo(map);\n\n// request location update and set location\nlc.start();\n```\n\nYou can also use the helper functions to automatically stop following when the map is panned. See the example below.\n\n```js\nvar lc = L.control.locate().addTo(map);\nmap.on('dragstart', lc._stopFollowing, lc);\n```\n\nAlternatively, you can unload events when not following to avoid unnecessary events.\n\n```js\nmap.on('startfollowing', function() {\n    map.on('dragstart', lc._stopFollowing, lc);\n}).on('stopfollowing', function() {\n    map.off('dragstart', lc._stopFollowing, lc);\n});\n```\n\n### Events\n\nThe locate control fires `startfollowing` and `stopfollowing` on the map object and passes `self` as data.\n\n\n### Extending\n\nTo customize the behavior of the plugin, use L.extend to override `start`, `stop`, `drawMarker` and/or `removeMarker`. Please be aware that functions may change and customizations become incompatible.\n\n```js\nL.Control.MyLocate = L.Control.Locate.extend({\n   drawMarker: function() {\n     // override to customize the marker\n   }\n});\n\nvar lc = new L.Control.MyLocate();\n```\n\n\n### FAQ\n\n#### How do I set the maximum zoom level?\n\nSet the `maxZoom` in `locateOptions` (`keepCurrentZoomLevel` must not be set to true).\n\n```js\nmap.addControl(L.control.locate({\n       locateOptions: {\n               maxZoom: 10\n}}));\n```\n\n\n## Screenshot\n\n![screenshot](https://raw.github.com/domoritz/leaflet-locatecontrol/gh-pages/screenshot.png \"Screenshot showing the locate control\")\n\n\n## Users\n\nSites that use this locate control:\n\n* [OpenStreetMap](http://www.openstreetmap.org/)\n* [MapBox](https://www.mapbox.com/mapbox.js/example/v1.0.0/leaflet-locatecontrol/)\n* [wheelmap.org](http://wheelmap.org/map)\n* [OpenMensa](http://openmensa.org/)\n* ...\n\n\n## Developers\n\nRun the demo locally with `grunt serve` and then open [localhost:9000/demo/index.html](http://localhost:9000/demo/index.html).\n\nTo generate the minified JS and CSS files, use [grunt](http://gruntjs.com/getting-started) and run `grunt`. However, don't include new minified files or a new version as part of a pull request.\n\n\n## Making a release (only core developer)\n\nA new version is released with `grunt bump:minor`. Then recompile the JS/CSS with `grunt` and commit the changes into the previous commit with `git commit -a --amend`. Then push the new code with `git push` and `git push --tags` and publish to npm with `npm publish`.\n\n\n## Thanks\n\nTo all [contributors](https://github.com/domoritz/leaflet-locatecontrol/contributors) and issue reporters.\n\n\n## License\n\nMIT\n",
  "bugs": {
    "url": "https://github.com/domoritz/leaflet-locatecontrol/issues"
  },
  "_id": "leaflet.locatecontrol@0.40.0",
  "dist": {
    "shasum": "4c3ca5b5e022fd61258cb1603e55ef8f8873c6c4"
  },
  "_from": "leaflet.locatecontrol@",
  "_resolved": "https://registry.npmjs.org/leaflet.locatecontrol/-/leaflet.locatecontrol-0.40.0.tgz"
}
